<?php
/**
 * Implements hook_schema().
 */
function foo_schema() {
  $schema = array();

  // In Drupal 8 we'll need 4 tables in order to support revisions and translations.
  // You can find more information about this here: https://drupal.org/node/1722906

  // The {entity} main table
  $schema['ens'] = array(
    'description' => 'ens entity base table.',
    'fields' => array(
      'entity_id' => array(
        'description' => 'The primary entity identifier.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'uuid' => array(
        'description' => 'The unique entity identifier.',
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE
      ),
      // Defaults to NULL in order to avoid a brief period of potential
      // deadlocks on the index.
      'revision_id' => array(
        'description' => 'The active revision identificator.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => FALSE,
        'unsigned' => TRUE,
        'default' => NULL
      ),
      'bundle' => array(
        'description' => 'The {ens_type}.type of this entity.',
        'type' => 'varchar',
        'length' => 48,
        'not null' => TRUE
      )
    ),
    'primary key' => array('entity_id'),
    'unique keys' => array(
      'uuid' => array('uuid'),
      'revision_id' => array('revision_id')
    )
  );

  // The {entity_revision} table
  $schema['ens_revision'] = array(
    'description' => 'ens entity revision table.',
    'fields' => array(
      'entity_id' => array(
        'description' => 'The primary entity identifier.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'revision_id' => array(
        'description' => 'The revision identifier.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'langcode' => array(
        'description' => 'The language code the entity was created in.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE
      ),
      'revision_uid' => array(
        'description' => 'The {users}.uid that created this version.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'revision_timestamp' => array(
        'description' => 'The Unix timestamp when the version was created.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE
      )
    ),
    'primary key' => array('revision_id')
  );

  // The {entity_field_data} table for ens's own, non-FieldAPI, fields
  // holding the current/active revision's data.
  $schema['ens_field_data'] = array(
    'description' => 'ens entity field data.',
    'fields' => array(
      'entity_id' => array(
        'description' => 'The primary entity identifier.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'revision_id' => array(
        'description' => 'The revision identifier.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'langcode' => array(
        'description' => 'The language code the entity was created in.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE
      ),
      'default_langcode' => array(
        'description' => 'Boolean indicating if the entry holds values for the original language of the entity.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE
      ),
      'bundle' => array(
        'description' => 'The {ens_type}.type of this entity.',
        'type' => 'varchar',
        'length' => 48,
        'not null' => TRUE
      ),
      // Custom entity fields from now on
      'label' => array(
        'description' => 'The entity label.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ),
      'uid' => array(
        'description' => 'The entity author identificator.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'published' => array(
        'description' => 'The status of this entity. 0 - disabled, 1 - enabled',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE
      ),
      'created' => array(
        'description' => 'The UNIX timestamp when the entity was created.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'changed' => array(
        'description' => 'The UNIX timestamp when the entity was updated.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'unsigned' => TRUE
      )
    ),
    'primary key' => array('entity_id', 'langcode'),
    'indexes' => array(
      'ens_revision' => array('revision_id')
    )
  );

  // The {entity_field_revision} table for ens's own, non-FieldAPI, fields
  // holding the data of all existing revisions.
  $schema['ens_field_revision'] = array(
    'description' => 'ens entity field data.',
    'fields' => array(
      'entity_id' => array(
        'description' => 'The primary entity identifier.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'revision_id' => array(
        'description' => 'The revision identifier.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'langcode' => array(
        'description' => 'The language code the entity was created in.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE
      ),
      'default_langcode' => array(
        'description' => 'Boolean indicating if the entry holds values for the original language of the entity.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE
      ),
      // Custom entity fields from now on
      'label' => array(
        'description' => 'The product label.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ),
      'uid' => array(
        'description' => 'The entity author identificator.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'published' => array(
        'description' => 'The status of this entity. 0 - disabled, 1 - enabled',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE
      ),
      'created' => array(
        'description' => 'The UNIX timestamp when the entity was created.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'unsigned' => TRUE
      ),
      'changed' => array(
        'description' => 'The UNIX timestamp when the entity was updated.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'unsigned' => TRUE
      )
    ),
    'primary key' => array('revision_id', 'langcode')
  );

  return $schema;
}


/**
 * Implements hook_install().
 */
function createEntityEns_install() {
  // Creates the Generic ensType entity
  entity_create('ens_type', array(
    'label' => 'Generic ENS type',
    'type' => 'generic',
    'description' => 'A very informative text goes here: ensType',
    'settings' => array('published' => 0)
  ))->save();
}